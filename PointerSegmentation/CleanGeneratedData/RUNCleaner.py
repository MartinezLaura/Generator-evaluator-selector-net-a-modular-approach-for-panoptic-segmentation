#Clean training data generated by pointer net for Classification Evaluation and refinement net
# (Mark segments that in which the predicted segment does not match the GT segment (hence there is closer match between the Predicted segment and other Segment in the image_###########################################################################################################
# You need the coco panoptic dataset

import numpy as np
import os
import MatcherCleaner
import random


ImageDir="/scratch/gobi1/seppel/DataSets/COCO_PANOPTIC/PanopticFull/train2017/" # image folder (coco training) train set
AnnotationDir="/scratch/gobi1/seppel/DataSets/COCO_PANOPTIC/PanopticFull/panoptic_train2017/" # annotation maps from coco panoptic train set
DataFile="/scratch/gobi1/seppel/DataSets/COCO_PANOPTIC/panoptic_train2017.json" # Json Data file coco panoptic train set

InputFolder="../../SampleData/TrainningDataForeEvalClassifyRefineNetsClassEquivalent/" # Input folder for cleaning
x = MatcherCleaner.Matcher(ImageDir, AnnotationDir, DataFile)
x.CleanerSeletor(InputFolder+"/Pred/",InputFolder+"/GT/")

# ###############################################Same as above but for different dir###############################################################################################################################################

InputFolder="../../SampleData/TrainningDataForeEvalClassifyRefineNetsAll/" # Input folder for cleaning
x = MatcherCleaner.Matcher(ImageDir, AnnotationDir, DataFile)
x.CleanerSeletor(InputFolder+"/Pred/",InputFolder+"/GT/")

